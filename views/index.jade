extends templates/base
block body
	.full#header
		.center
			.row
				.col4.off4
					.pull-center
						a(href="/")
							h1 schematico
				.col4
					.pull-center
						a(href="/signup", role="button") Sign up

	.center#body
		.row
			.col12
				h2 Placeholder API and Data
				p API routes that return randomly generated data according to a schema that you define. Just create your route and schema one time, and Schematico will remember them. Schematico is placeholder API and schema, with advanced data generation.
				h2 Contextual Data
				p Schematico knows what kind of data you are looking for and delivers realistic results. Choose from over 50 different data types &dash; from personal data, to financial, social, and numerical data &dash; and much more.

		.row.code-block
			.col6
				h3 Sample schematic
				.code.request
					.t0 {
					.t1 	name : {
					.t2 		first : "FirstName",
					.t2 		last : "LastName"
					.t1 	},
					.t1 	phone : "Phone",
					.t1 	email : "Email",
					.t1 	address : {
					.t2 		street : "Street",
					.t2 		city : "City",
					.t2 		state : "State",
					.t2 		zip : "Zip",
					.t1 	}
					.t0 }

			.col6
				h3 generated response
				.code.response
					.t0 {
					.t1 	name : {
					.t2 		first : "John",
					.t2 		last : "Smith"
					.t1 	},
					.t1 	phone : "(417) 934-4467",
					.t1 	email : "mibomu@ibevajoh.io",
					.t1 	address : {
					.t2 		street : "Rolla Drive",
					.t2 		city : "Buffalo",
					.t2 		state : "NY",
					.t2 		zip : "14221",
					.t1 	}
					.t0 }

		.row
			.col12
				h2 Advanced Schema Structure
				p The schema at its core is a JSON object &dash; these can be nested as many levels as desired. You can even even request arrays of objects, and specify how many objects you want to receive.

		.row.code-block#example
			.col6
				h3 Sample schematic
				.code.request
					.t0 {
					.t1 	identity : {
					.t2 		email : "Email",
					.t2 		social : {
					.t3 			twitter : "TwitterHandle",
					.t3 			facebook : "FacebookID",
					.t3 			website : {
					.t4 				domain : "Domain",
					.t4 				ip : "IP"
					.t3 			}
					.t2 		}
					.t1 	},
					.t1 	friends : [{
					.t2 		username : "Username",
					.t2 		twitter : "TwitterHandle"
					.t1 	}, 5]
					.t0 }
			.col6
				h3 generated response
				.code.response
					.t0 {
					.t1 	identity : {
					.t2 		email : "vihul@kuvankac.gov",
					.t2 		social : {
					.t3 			twitter : "@oj",
					.t3 			facebook : "1000085540447128",
					.t3 			website : {
					.t4 				domain : "uv.edu",
					.t4 				ip : "14.64.214.178"
					.t3 			}
					.t2 		}
					.t1 	},
					.t1 	friends : [
					.t2 		{
					.t3 			username : "Abigail_Price",
					.t3 			twitter : "@tujja"
					.t2 		},
					.t2 		{
					.t3 			username : "Katlyn.Kohler",
					.t3 			twitter : "@esemu"
					.t2 		},
					.t2 		{
					.t3 			username : "Rafaela",
					.t3 			twitter : "@tifjacno"
					.t2 		},
					.t2 		{
					.t3 			username : "Lauretta_Schmitt",
					.t3 			twitter : "@favius"
					.t2 		},
					.t2 		{
					.t3 			username : "Leilani",
					.t3 			twitter : "@ulwec"
					.t2 		}
					.t1 	]
					.t0 }

		.row#datatypes
			.col12
				h2 Data Types
		.row.code-block
			.col6
				.code.request
					.t0 	Number
					.t0 	-Number (Negative)
					.t0 	?Number (Positive or Negative)
					.t0 	Integer
					.t0 	-Integer (Negative)
					.t0 	?Integer (Positive or Negative)
					.t0 	Boolean
					.t0 	Character
					.t0 	Name
					.t0 	FirstName
					.t0 	LastName
					.t0 	Gender
					.t0 	Birthday
					.t0 	Age
					.t0 	Address
					.t0 	Zip
					.t0 	City
					.t0 	Street
					.t0 	State
					.t0 	LongState
					.t0 	Coordinates
					.t0 	Latitude
					.t0 	Longitude
					.t0 	AreaCode
					.t0 	Phone
					.t0 	Company
					.t0 	HexColor
					.t0 	RGBColor
					.t0 	Hash
					.t0 	GUID
			.col6
				.code.response
					.t0 	Dollar
					.t0 	CreditCardNumber
					.t0 	CreditCardType
					.t0 	CreditCardExpiration
					.t0 	CreditCardExpirationMonth
					.t0 	CreditCardExpirationYear
					.t0 	Email
					.t0 	Username
					.t0 	Domain
					.t0 	TLD
					.t0 	IP
					.t0 	IPv6
					.t0 	Avatar
					.t0 	FacebookID
					.t0 	TwitterHandle
					.t0 	Hashtag
					.t0 	-Date (Past)
					.t0 	Date (Present)
					.t0 	+Date (Future)
					.t0 	?Date (Past or Future)
					.t0 	Day
					.t0 	Month
					.t0 	Year
					.t0 	Word
					.t0 	Words
					.t0 	Sentence
					.t0 	Sentences
					.t0 	Paragraph
					.t0 	Paragraphs


		.row#getstarted
			.col12.code-block
				h2 How To User Schematico
				p When Schematico launches, you'll only need to sign up for an account. You will get your own unique username which will serve as your route identifier.
				p Once you have a username you'll get a token that needs to be supplied with every API call so that we can authenticate you.
				br
				h3 creating a route
				.code
					.t0 POST http://schematico.co/your_username/your_route?token=your_token
					br
					.t0 REQUEST BODY
					br
					.t1 { ... your_new_schema ... }
				h3 updating a route
				.code
					.t0 PUT http://schematico.co/your_username/your_route?token=your_token
					br
					.t0 REQUEST BODY
					br
					.t1 { ... your_updated_schema ... }
				//- p Getting data requires a POST request because we need to be able to identity you as the caller. We don't want other people making API calls on your behalf.
				h3 getting data &dash; one object
				.code
					.t0 GET http://schematico.co/your_username/your_route?token=your_token
					br
					.t0 RESPONSE BODY
					br
					.t1 { ... your_schema_with_data ... }
				h3 getting more data &dash; 173 objects
				.code(style="margin-bottom: 0px !important;")
					.t0 GET http://schematico.co/your_username/your_route?token=your_token&count=173
					br
					.t0 RESPONSE BODY
					br
					.t1 [{ ... your_schema_with_data ... }, ...]

	.full#comingsoon
		.center
			.row
				.col12
					.pull-center
						h1 coming soon











